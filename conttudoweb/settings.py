"""
Django settings for conttudoweb project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""
import locale
import os

from corsheaders.defaults import default_headers
from decouple import config, Csv
from dj_database_url import parse as dburl
from django.conf.locale.pt_BR import formats as pt_BR_formats

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from conttudoweb.core.context_processors import EMPRESA_NAME, EMPRESA_SLOGAN

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

DEVELOPER = config('DEVELOPER', default=False, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default=[], cast=Csv())

INTERNAL_IPS = ['127.0.0.1', '0.0.0.0']

ADMINS = [('Alessandro', 'alessandrolimafolk@gmail.com'), ]

AUTH_USER_MODEL = 'authentication.MyUser'

# Email configuration

DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', default='admin@admin.com')
EMAIL_BACKEND = config('EMAIL_BACKEND')
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_PORT = config('EMAIL_PORT', cast=int)
EMAIL_USE_TLS = config('EMAIL_USE_TLS', cast=bool)
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')

# Application definition

# customizations
ADMIN_SITE_TITLE = EMPRESA_NAME
ADMIN_SITE_HEADER = "%s %s" % (EMPRESA_NAME, EMPRESA_SLOGAN)
ADMIN_INDEX_TITLE = "Controles Administrativos"

PUBLIC_SCHEMA_NAME = 'public'

TENANT_MODEL = "tenants.Client"
TENANT_DOMAIN_MODEL = "tenants.Domain"

COMMON_APPS = [
    # https://github.com/fabiocaccamo/django-admin-interface
    # "admin_interface",
    # "colorfield",

    "jazzmin",

    "django_tenants",
    "conttudoweb.tenants"
]

SHARED_APPS = COMMON_APPS + [
    "django.contrib.contenttypes",
    "django.contrib.admin",
    'mptt',
    "django.contrib.auth",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    "conttudoweb.authentication",
]

TENANT_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    "corsheaders",
    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth',
    'django_filters',
    "test_without_migrations",
    "django_extensions",
    "debug_toolbar",

    "conttudoweb.home",
    "conttudoweb.authentication",
    "conttudoweb.core",
    "conttudoweb.accounting",
    "conttudoweb.inventory",
    "conttudoweb.purchase",
    "conttudoweb.sale",
]

# if DEVELOPER:
#     TENANT_APPS += [
#         'django.contrib.admindocs',
#     ]

INSTALLED_APPS = COMMON_APPS + TENANT_APPS

MIDDLEWARE = [
    # 'tenant_schemas.middleware.TenantMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'conttudoweb.tenants.middleware.TenantMiddleware',
    # 'tenant_schemas.middleware.DefaultTenantMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',

    # 'corsheaders.middleware.CorsPostCsrfMiddleware',

    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

X_FRAME_OPTIONS = 'SAMEORIGIN'

ROOT_URLCONF = 'conttudoweb.urls'
PUBLIC_SCHEMA_URLCONF = 'conttudoweb.urls_public'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        # 'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                'conttudoweb.core.context_processors.consts',
            ],
            'loaders': [
                # 'conttudoweb.tenants.template_loaders.CustomFilesystemLoader',
                'django_tenants.template.loaders.filesystem.Loader',
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader'
            ]
        },
    },
]

MULTITENANT_TEMPLATE_DIRS = ['tenants/%s/templates']

WSGI_APPLICATION = 'conttudoweb.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

# default_dburl = 'sqlite:///' + os.path.join(BASE_DIR, 'db.sqlite3')
default_dburl = 'postgres://postgres:postgres@127.0.0.1:5432/db_conttudoweb'
DATABASES = {
    'default': config('DATABASE_URL', default=default_dburl, cast=dburl),
}
DATABASES['default']['ENGINE'] = 'django_tenants.postgresql_backend'
DATABASE_ROUTERS = (
    'django_tenants.routers.TenantSyncRouter',
)

DATA_UPLOAD_MAX_NUMBER_FIELDS = config('DATA_UPLOAD_MAX_NUMBER_FIELDS', default=1000, cast=int)

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'pt-br'

# locale.setlocale(locale.LC_ALL, 'pt_BR.UTF-8')

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True

USE_THOUSAND_SEPARATOR = True
THOUSAND_SEPARATOR = '.'
DECIMAL_SEPARATOR = ','

pt_BR_formats.DATETIME_FORMAT = pt_BR_formats.SHORT_DATETIME_FORMAT
pt_BR_formats.DATE_FORMAT = pt_BR_formats.SHORT_DATE_FORMAT

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# if not DEVELOPER:
DEFAULT_FILE_STORAGE = 'tenant_schemas.storage.TenantFileSystemStorage'


# DRF (API)
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'conttudoweb.pagination.CustomPageNumberPagination',
    'PAGE_SIZE': 5,
    'DEFAULT_PERMISSION_CLASSES': [
        'conttudoweb.permissions.CustomDjangoModelPermissions'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'COERCE_DECIMAL_TO_STRING': False,
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
    ),
}

REST_AUTH_SERIALIZERS = {
    'TOKEN_SERIALIZER': 'conttudoweb.authentication.serializers.TokenSerializer',
    'USER_DETAILS_SERIALIZER': 'conttudoweb.authentication.serializers.UserDetailsSerializer',
}

CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_HEADERS = list(default_headers) + [
    'Tenant',
    'Access-Control-Allow-Origin'
]

CORS_EXPOSE_HEADERS = [
    'Tenant'
]

# CORS_REPLACE_HTTPS_REFERER = True
#
# CSRF_TRUSTED_ORIGINS = (
#     '.conttudoweb.com.br',
# )


# region django-jazzmin

JAZZMIN_SETTINGS = {
    # title of the window
    'site_title': ADMIN_SITE_TITLE,

    # Title on the brand, and the login screen (19 chars max)
    'site_header': ADMIN_SITE_TITLE,

    # square logo to use for your site, must be present in static files, used for favicon and brand on top left
    'site_logo': 'assets/img/icon.png',

    # Welcome text on the login screen
    'welcome_sign': EMPRESA_SLOGAN,

    # Copyright on the footer
    'copyright': ADMIN_SITE_HEADER,

    # The model admin to search from the search bar, search bar omitted if excluded
    # 'search_model': 'auth.User',

    # Field name on user model that contains avatar image
    'user_avatar': None,

    ############
    # Top Menu #
    ############

    # Links to put along the top menu
    'topmenu_links': [

        # Url that gets reversed (Permissions can be added)
        # {'name': 'Home', 'url': 'admin:index', 'permissions': ['auth.view_user']},

        # external url that opens in a new window (Permissions can be added)
        # {'name': 'Support', 'url': 'https://github.com/farridav/django-jazzmin/issues', 'new_window': True},

        # model admin to link to (Permissions checked against model)
        # {'model': 'authentication.group'},

        # App with dropdown menu to all its models pages (Permissions checked against models)
        # {'app': 'authentication'},
    ],

    #############
    # User Menu #
    #############

    # Additional links to include in the user menu on the top right ('app' url type is not allowed)
    # 'usermenu_links': [
    #     {'name': 'Support', 'url': 'https://github.com/farridav/django-jazzmin/issues', 'new_window': True},
    #     {'model': 'authentication.user'}
    # ],

    #############
    # Side Menu #
    #############

    # Whether to display the side menu
    'show_sidebar': True,

    # Whether to aut expand the menu
    'navigation_expanded': True,

    # Hide these apps when generating side menu e.g (auth)
    'hide_apps': ['contenttypes', 'authtoken'],

    # Hide these models when generating side menu (e.g auth.user)
    'hide_models': [
        'authentication.permission',

        'core.city', 'core.federativeunit',

        'accounting.bank', 'accounting.category', 'accounting.classificationcenter', 'accounting.depositaccount',

        'inventory.stock', 'inventory.category', 'inventory.productsizeregister', 'inventory.productsize',
        'inventory.subcategory', 'inventory.packagingtype', 'inventory.unitofmeasure', 'inventory.product'
    ],

    # List of apps (and/or models) to base side menu ordering off of (does not need to contain all apps/models)
    "order_with_respect_to": [
        "authentication", "authentication.user",
        'core',
        'accounting', 'accounting.accountpayable', 'accounting.accountreceivable', 'accounting.financialmovement',
        'purchase'
    ],

    # Custom links to append to app groups, keyed on app name
    'custom_links': {
        'core': [
            {'model': 'accounting.depositaccount'},
            {'model': 'inventory.product'},
        ]
        # 'polls': [{
        #     'name': 'Make Messages',
        #     'url': 'make_messages',
        #     'icon': 'fas fa-comments',
        #     'permissions': ['polls.view_poll']
        # }]
    },

    # Custom icons for side menu apps/models See https://www.fontawesomecheatsheet.com/font-awesome-cheatsheet-5x/
    # for a list of icon classes
    'icons': {
        # 'authentication': 'fas fa-users-cog',
        'authentication.user': 'fas fa-user',
        'authentication.Group': 'fas fa-users',
        'authentication.LogEntry': 'fas fa-history',
        # 'authentication.Permission': 'fas fa-user-check',

        # 'core.city': 'fas fa-city',
        'core.people': 'fas fa-user-friends',
        # 'core.federativeunit': 'fas fa-globe-americas',

        'purchase.purchaseorder': 'fas fa-cart-plus',

        # 'accounting.bank': 'fas fa-coins',
        # 'accounting.category': 'fas fa-tags',
        # 'accounting.classificationcenter': 'fas fa-chart-pie',
        'accounting.accountpayable': 'fas fa-dollar-sign',
        'accounting.accountreceivable': 'fas fa-hand-holding-usd',
        'accounting.depositaccount': 'fas fa-wallet',
        'accounting.expectedcashflow': 'fas fa-chart-line',
        'accounting.financialmovement': 'fas fa-money-bill-wave',

        # 'inventory.stock': 'fas fa-warehouse',
        # 'inventory.category': 'fas fa-tag',
        # 'inventory.productsizeregister': 'fas fa-text-width',
        'inventory.product': 'fas fa-box',

        'sale.saleorder': 'fas fa-store',
    },
    # Icons that are used when one is not manually specified
    'default_icon_parents': 'fas fa-chevron-circle-right',
    'default_icon_children': 'fas fa-circle',

    #############
    # UI Tweaks #
    #############
    # Relative paths to custom CSS/JS scripts (must be present in static files)
    "custom_css": None,
    "custom_js": None,
    # Whether to show the UI customizer on the sidebar
    "show_ui_builder": False,

    ###############
    # Change view #
    ###############
    # Render out the change view as a single form, or in tabs, current options are
    # - single
    # - horizontal_tabs (default)
    # - vertical_tabs
    # - collapsible
    # - carousel
    "changeform_format": "horizontal_tabs",
    # override change forms on a per modeladmin basis
    # "changeform_format_overrides": {"sale.saleorder": "collapsible"},
    # Add a language dropdown into the admin
    "language_chooser": False,
}

JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": True,
    "footer_small_text": True,
    "body_small_text": True,
    "brand_small_text": False,
    "brand_colour": False,
    "accent": "accent-navy",
    "navbar": "navbar-white navbar-light",
    "no_navbar_border": False,
    "sidebar": "sidebar-dark-orange",
    "sidebar_nav_small_text": True,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": True,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False
}

# endregion
