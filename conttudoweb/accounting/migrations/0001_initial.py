# Generated by Django 3.0.2 on 2020-01-03 20:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5, unique=True, verbose_name='código')),
                ('description', models.CharField(max_length=255, verbose_name='descrição')),
            ],
            options={
                'verbose_name': 'banco',
                'ordering': ('code',),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='descrição')),
            ],
            options={
                'verbose_name': 'categoria',
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='Recurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('original_date_day', models.IntegerField(null=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Entity')),
            ],
        ),
        migrations.CreateModel(
            name='DepositAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('cur', 'Conta corrente'), ('mon', 'Dinheiro'), ('inv', 'Conta de investimento')], default='cur', max_length=3, verbose_name='tipo')),
                ('agency_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='número da agência')),
                ('agency_digit', models.CharField(blank=True, max_length=2, null=True, verbose_name='dígito da agência')),
                ('account_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='número da conta')),
                ('account_digit', models.CharField(blank=True, max_length=2, null=True, verbose_name='dígito da conta')),
                ('name', models.CharField(max_length=30, verbose_name='nome da conta')),
                ('bank', models.ForeignKey(blank=True, help_text="Obrigatório quando o tipo é 'Conta corrente'.", null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.Bank', verbose_name='banco')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Entity')),
            ],
            options={
                'verbose_name': 'conta financeira',
                'verbose_name_plural': 'contas financeiras',
            },
        ),
        migrations.CreateModel(
            name='ClassificationCenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='nome')),
                ('cost_center', models.BooleanField(default=False, verbose_name='centro de custo')),
                ('revenue_center', models.BooleanField(default=False, verbose_name='centro de receita')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Entity')),
            ],
            options={
                'verbose_name': 'centro de custo/receita',
                'verbose_name_plural': 'centros de custo/receita',
            },
        ),
        migrations.CreateModel(
            name='AccountReceivables',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.CharField(blank=True, max_length=60, null=True, verbose_name='documento')),
                ('description', models.CharField(max_length=255, verbose_name='descrição')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='valor')),
                ('due_date', models.DateField(verbose_name='data de vencimento')),
                ('recurrence_count', models.IntegerField(blank=True, editable=False, null=True)),
                ('type', models.CharField(choices=[('nor', 'Normal'), ('rec', 'Recorrente'), ('par', 'Parcelada')], default='nor', help_text="<a href='#' title='Contas normais vencem apenas uma vez. \nContas recorrentes vencem uma vez por período indefinidamente. \nContas parceladas têm um número fixo de vencimentos pré-estipulado.'>?</a>", max_length=3, verbose_name='tipo')),
                ('frequency', models.CharField(blank=True, choices=[('weekly', 'Semanal'), ('biweekly', 'Quinzenal'), ('monthly', 'Mensal'), ('bimonthly', 'Bimestral'), ('quarterly', 'Trimestral'), ('semiannual', 'Semestral'), ('annual', 'Anual')], help_text="Obrigatório quando o tipo é 'Recorrente'.", max_length=15, null=True, verbose_name='frequência')),
                ('number_of_parcels', models.PositiveIntegerField(blank=True, help_text="Obrigatório caso o tipo seja 'Parcelada'.", null=True, verbose_name='número de parcelas')),
                ('parcel', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('document_emission_date', models.DateField(blank=True, null=True, verbose_name='data de emissão')),
                ('observation', models.TextField(blank=True, null=True, verbose_name='observação')),
                ('parent', models.IntegerField(blank=True, editable=False, null=True)),
                ('reconciled', models.BooleanField(default=False, verbose_name='conciliado')),
                ('liquidated', models.BooleanField(default=False, verbose_name='recebido?')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.Category', verbose_name='categoria')),
                ('classification_center', models.ForeignKey(blank=True, limit_choices_to={'revenue_center': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.ClassificationCenter', verbose_name='classificação')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Entity')),
                ('expected_deposit_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.DepositAccount')),
                ('person', models.ForeignKey(blank=True, limit_choices_to={'customer': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.People', verbose_name='cliente')),
                ('recurrence_key', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounting.Recurrence')),
            ],
            options={
                'verbose_name': 'conta à receber',
                'verbose_name_plural': 'contas à receber',
            },
        ),
        migrations.CreateModel(
            name='AccountPayable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.CharField(blank=True, max_length=60, null=True, verbose_name='documento')),
                ('description', models.CharField(max_length=255, verbose_name='descrição')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='valor')),
                ('due_date', models.DateField(verbose_name='data de vencimento')),
                ('recurrence_count', models.IntegerField(blank=True, editable=False, null=True)),
                ('type', models.CharField(choices=[('nor', 'Normal'), ('rec', 'Recorrente'), ('par', 'Parcelada')], default='nor', help_text="<a href='#' title='Contas normais vencem apenas uma vez. \nContas recorrentes vencem uma vez por período indefinidamente. \nContas parceladas têm um número fixo de vencimentos pré-estipulado.'>?</a>", max_length=3, verbose_name='tipo')),
                ('frequency', models.CharField(blank=True, choices=[('weekly', 'Semanal'), ('biweekly', 'Quinzenal'), ('monthly', 'Mensal'), ('bimonthly', 'Bimestral'), ('quarterly', 'Trimestral'), ('semiannual', 'Semestral'), ('annual', 'Anual')], help_text="Obrigatório quando o tipo é 'Recorrente'.", max_length=15, null=True, verbose_name='frequência')),
                ('number_of_parcels', models.PositiveIntegerField(blank=True, help_text="Obrigatório caso o tipo seja 'Parcelada'.", null=True, verbose_name='número de parcelas')),
                ('parcel', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('document_emission_date', models.DateField(blank=True, null=True, verbose_name='data de emissão')),
                ('observation', models.TextField(blank=True, null=True, verbose_name='observação')),
                ('parent', models.IntegerField(blank=True, editable=False, null=True)),
                ('reconciled', models.BooleanField(default=False, verbose_name='conciliado')),
                ('liquidated', models.BooleanField(default=False, verbose_name='pago?')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.Category', verbose_name='categoria')),
                ('classification_center', models.ForeignKey(blank=True, limit_choices_to={'cost_center': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.ClassificationCenter', verbose_name='classificação')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Entity')),
                ('expected_deposit_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.DepositAccount')),
                ('person', models.ForeignKey(blank=True, limit_choices_to={'supplier': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.People', verbose_name='fornecedor')),
                ('recurrence_key', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounting.Recurrence')),
            ],
            options={
                'verbose_name': 'conta à pagar',
                'verbose_name_plural': 'contas à pagar',
            },
        ),
    ]
